name: Deploy Java App with Docker and Kubernetes
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Build Docker Image
      - name: Build Docker Image
        run: |
           docker build -t pasindu55/aluminium_backend .
           docker tag pasindu55/aluminium_backend:latest pasindu55/aluminium_backend:${{ github.sha }}

      # Push Docker Image to Registry (if required)
      - name: Push Docker Image to Registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push pasindu55/aluminium_backend:${{ github.sha }}

      # Install kubectl
      - name: Install kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Debug kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}"

      - name: Deploy to Kubernetes
        uses: steebchen/kubectl@master
        with:
         args: set image deployment/my-deployment my-container=pasindu55/aluminium_backend:${{ github.sha }}
        env:
           KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

      # Install SSH client
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      # Use SSH private key
      - name: Use SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 4.213.119.32 >> ~/.ssh/known_hosts

      # Copy Build Files to Server and restart Docker container
      - name: Copy Build Files to Server and restart Docker container
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@4.213.119.32 "sudo docker pull pasindu55/aluminium_backend:${{ github.sha }} && sudo docker stop my-container && sudo docker rm my-container && sudo docker run -d -p 8080:8080 --name my-container pasindu55/aluminium_backend:${{ github.sha }}"

      # Optional: Start any services needed on the server, like Apache
      - name: Start Apache on Server
        run: |
          ssh azureuser@4.213.119.32 "sudo systemctl start apache2"
